# Project presets
#
# Configurure the server now as: "cmake <OPTIONS> <FLAGS>  .."
#
# Options:
#
# Flags:
#
# -DCMAKE_CXX_COMPILER= /usr/bin/g++
# -DCMAKE_INSTALL_PREFIX=/opt
# -DCMAKE_BUILD_TYPE=debug | -DCMAKE_BUILD_TYPE=release

# Commons
CMAKE_MINIMUM_REQUIRED(VERSION 3.30 FATAL_ERROR)
PROJECT("ksy_test" CXX)

# Version
SET ( PROJECT_VERSION_MAJOR     0                                       )
SET ( PROJECT_VERSION_MINOR     0                                       )
SET ( PROJECT_VERSION_PATCH     1                                       )
SET ( PROJECT_VERSION_TWEAK     0                                       )
SET ( PROJECT_VERSION           ${PROJECT_VERSION_MAJOR}.${PROJECT_VERSION_MINOR}.${PROJECT_VERSION_PATCH}.${PROJECT_VERSION_TWEAK} )

STRING( TIMESTAMP TODAY "%d/%m/%Y"					)

# Extract version from GIT
SET ( AUTOGENERATED_VERSION "${PROJECT_VERSION}"
      CACHE INTERNAL "Autogenerated version"                            )
STRING ( TIMESTAMP AUTOGENERATED_DATE "%d/%m/%Y %H:%M"                  )

# Set project details
SET ( Alias         "KaiTai me tender"					)
SET ( Author		"Vladislav \\\"Tanuki\\\" Mikhailikov"		)
SET ( Copyright		"GNU GPLv3"					)
SET ( Description	"KaiTai Struct Teltonica sample parser"		)

# Project directories
SET ( Project_Include_Dir     "${CMAKE_SOURCE_DIR}/include"		)
SET ( Project_Source_Dir      "${CMAKE_SOURCE_DIR}/src"			)

# Find KSY

# Find JSON CPP
FIND_PACKAGE(PkgConfig REQUIRED)
PKG_CHECK_MODULES(JSONCPP jsoncpp)

# Enable threads
SET(CMAKE_THREAD_PREFER_PTHREAD TRUE) # these are to use the prefered -pthread flag
SET(THREADS_PREFER_PTHREAD_FLAG TRUE) # over the -lpthread option
FIND_PACKAGE(Threads REQUIRED)

# Sources
ADD_SUBDIRECTORY ( src )

# End of file


